name: Donation Opportunities Batch Search

on:
  schedule:
    # Run daily at 8 AM UTC (adjust timezone as needed)
    - cron: '0 8 * * *'
  workflow_dispatch:
    # Allow manual trigger
    inputs:
      keywords:
        description: 'Search keywords (comma-separated)'
        required: false
        default: 'charity,food bank,shelter'
      max_results:
        description: 'Maximum results per ZIP code'
        required: false
        default: '10'

jobs:
  batch-search:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create environment file
      run: |
        echo "GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }}" > .env
        
    - name: Setup Gmail API credentials
      run: |
        echo '${{ secrets.GMAIL_CREDENTIALS }}' > credentials.json
        
    - name: Setup Gmail API token
      run: |
        echo '${{ secrets.GMAIL_TOKEN }}' > token.json
        
    - name: Run batch donation search with email
      run: |
        KEYWORDS="${{ github.event.inputs.keywords || 'charity,food bank,shelter' }}"
        MAX_RESULTS="${{ github.event.inputs.max_results || '10' }}"
        
        python cli.py --zip-batch --keywords "$KEYWORDS" --max-results $MAX_RESULTS --include-reviews --email --quiet
        
    - name: Upload results as artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: donation-search-results-${{ github.run_number }}
        path: |
          donation_opportunities_*.json
          donation_opportunities_*.csv
        retention-days: 30
        
    - name: Clean up sensitive files
      if: always()
      run: |
        rm -f .env
        rm -f credentials.json
        rm -f token.json